{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"BUG系统修正","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://migbug.ruijie.net/*"],"orig_noframes":null,"orig_run_at":"document-end","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":"document-end"},"storage":{"ts":1453789574142,"data":{}},"enabled":true,"position":1,"file_url":"migbug.ruijie.net/","uuid":"15031dce-5488-4b4f-b230-f42d91a18b31","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBCVUfns7vnu5/kv67mraMKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3VzZXJzLzQKLy8gQGRlc2NyaXB0aW9uICAgICBSZXN0b3JlIFN0eWxpc2ggc3R5bGVzIGZyb20gZGVsZXRpb24gb24gYmFpZHUuY29tCi8vIEB2ZXJzaW9uICAgICAgICAgMS4wCi8vIEBhdXRob3IgICAgICAgICAgbHVhbnR1QHZpcC5xcS5jb20KLy8gQG1hdGNoICAgICAgICAgICAqOi8vbWlnYnVnLnJ1aWppZS5uZXQvKgovLyBAcnVuLWF0ICAgICAgICAgIGRvY3VtZW50LWVuZAovLyA9PS9Vc2VyU2NyaXB0PT0KCmZ1bmN0aW9uIGZpeFN0eWxlQlVHKCkgewogICAgLy9hbGVydCgiZml4U3R5bGUiKTsKICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgieHRiLXRleHQiKTsKICAgIC8vYWxlcnQoZWxlbWVudFswXS5pbm5lckhUTUwpOwp9CmZpeFN0eWxlQlVHKCk7"},{"name":"百度云插件+APIKey","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/https?\\:\\/\\/pan\\.baidu\\.com.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_connects":["cn.bing.com","www.googleapis.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1438062561880,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/496-%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6-apikey/code/%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6+APIKey.user.js","uuid":"18535954-ccfc-4d3b-b7ba-094aaa1da78e","source":""},{"name":"去百度搜索置顶推广","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*www.baidu.com*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1438062724214,"data":{}},"enabled":true,"position":3,"uuid":"a772ab1b-939e-4d19-b65f-926d8c227270","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUJ5Y6755m+5bqm5pCc57Si572u6aG25o6o5bm/Ci8vIEBhdXRob3IJYnVybmluZ2FsbAovLyBAZGVzY3JpcHRpb24J5Y676Zmk5o+S5YWl5Zyo55m+5bqm5pCc57Si57uT5p6c5aS06YOo44CB5bC+6YOo55qE5o6o5bm/6ZO+5o6l44CCCi8vIEB2ZXJzaW9uICAgICAyMDE1LjYuMgovLyBAaW5jbHVkZQkJKnd3dy5iYWlkdS5jb20qCi8vIEBzdXBwb3J0VVJMCQlodHRwOi8vd3d3LmJ1cm5pbmdhbGwuY29tCi8vIEBjb250cmlidXRpb25VUkwJdHJveTQ1MDQwOTQwNUBnbWFpbC5jb218YWxpcGF5LmNvbQovLyBAbmFtZXNwYWNlIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vdXNlcnMvMzQwMC1heGV0cm95Ci8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgZnVuY3Rpb24gYWRkRXZlbnQob2JqLCBldmVudCwgZm4pIHsKCXJldHVybiBvYmouYWRkRXZlbnRMaXN0ZW5lciA/IG9iai5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBmbiwgZmFsc2UpIDogb2JqLmF0dGFjaEV2ZW50TGlzdGVuZXIoJ29uJyArIGV2ZW50LCBmbik7Cgl9OwoJZnVuY3Rpb24gcmVtb3ZlQWRzKCl7CiAgICB2YXIgYWRsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2NvbnRlbnRfbGVmdD4qJykKICAgIGZvciAodmFyIGk9MDtpPGFkbGlzdC5sZW5ndGg7aSsrKSB7CiAgICAJdmFyIGlkPWFkbGlzdFtpXS5nZXRBdHRyaWJ1dGUoImlkIikKICAgIAkgaWYoaWQ+MTAwMCB8fCBpZD09bnVsbCl7CiAgICAJIAlhZGxpc3RbaV0uc3R5bGUuY3NzVGV4dD0iZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyIKICAgIAkgCWFkbGlzdFtpXS5yZW1vdmUoYWRsaXN0W2ldKTsKICAgIAkgfTsKICAgIH07CiAgfTsKCWFkZEV2ZW50KGRvY3VtZW50LCdET01Ob2RlSW5zZXJ0ZWQnLGZ1bmN0aW9uKCl7CgkJCXJlbW92ZUFkcygpOwoJCX0pCn0pKCk="},{"name":"百度网盘助手","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://yun.baidu.com","http://yun.baidu.com/#*","http://pan.baidu.com/share/manage*","http://pan.baidu.com/disk/recyclebin*","http://yun.baidu.com/pcloud/album/info*"],"orig_includes":["http://pan.baidu.com/*","http://yun.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1438062769545,"data":{}},"enabled":true,"position":4,"uuid":"3a4d323a-e1b0-483d-8c6b-f92ff3e06db3","source":""},{"name":"百度云下载不受限制","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://pan.baidu.com/share/link?shareid*","http://pan.baidu.com/share/link?uk*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1439258126351,"data":{}},"enabled":false,"position":5,"file_url":"https://greasyfork.org/scripts/10895-%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%8B%E8%BD%BD%E4%B8%8D%E5%8F%97%E9%99%90%E5%88%B6/code/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%8B%E8%BD%BD%E4%B8%8D%E5%8F%97%E9%99%90%E5%88%B6.user.js","uuid":"ae158b33-f6c5-4422-8032-107c3c15ba54","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIOeZvuW6puS6keS4i+i9veS4jeWPl+mZkOWItgovLyBAbmFtZXNwYWNlICAgICAg55m+5bqm5LqR5LiL6L295LiN5Y+X6ZmQ5Yi2Ci8vIEBkZXNjcmlwdGlvbiAgICDmiooic2hhcmUi5pS55Li6IndhcCLnmb7luqbnvZHnm5jkuIvovb3lpKfkuo4yR+eahOaWh+S7tuS4jeeUqOWuieijheS6keeuoeWutgovLyBAdmVyc2lvbiAgICAgICAgMS4wCi8vIEBpbmNsdWRlICAgICAgICBodHRwOi8vcGFuLmJhaWR1LmNvbS9zaGFyZS9saW5rP3NoYXJlaWQqCi8vIEBpbmNsdWRlICAgICAgICBodHRwOi8vcGFuLmJhaWR1LmNvbS9zaGFyZS9saW5rP3VrKgovLyBAcnVuLWF0ICAgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gPT0vVXNlclNjcmlwdD09CiAgICAgICAgICAgCihmdW5jdGlvbigpewogIGxvY2F0aW9uLmhyZWYgPSBkb2N1bWVudC5VUkwucmVwbGFjZSgic2hhcmUiLCJ3YXAiKTsKfSkoKTs="},{"name":"百度网页搜索 推广过滤","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/www\\.baidu\\.com\\/((s|baidu)\\?|#wd|(index.*)?$)/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1453714707133,"data":{}},"enabled":true,"position":6,"file_url":"https://openuserjs.org/install/HKMHD/%E7%99%BE%E5%BA%A6%E7%BD%91%E9%A1%B5%E6%90%9C%E7%B4%A2_%E6%8E%A8%E5%B9%BF%E8%BF%87%E6%BB%A4.user.js","uuid":"931e9dc8-4cce-4f09-bfd0-5bc210fae71e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgCQkJ55m+5bqm572R6aG15pCc57SiIOaOqOW5v+i/h+a7pAovLyBAYXV0aG9yCQkJ5p6B5ZOBzqbPic6m5bCP54yrCi8vIEB2ZXJzaW9uCQkJMC4wLjMKLy8gQGRlc2NyaXB0aW9uCQnnmb7luqbnvZHpobXmkJzntKIg5o6o5bm/6L+H5rukCi8vIEBpbmNsdWRlCQkJL3d3d1wuYmFpZHVcLmNvbVwvKChzfGJhaWR1KVw/fCN3ZHwoaW5kZXguKik/JCkvCi8vIEBuYW1lc3BhY2UJCWh0dHA6Ly9iYnMubWF4dGhvbi5jbi90aHJlYWQtODM5ODc3LTEtMi5odG1sCi8vIEBob21lcGFnZQkJaHR0cDovL2Jicy5tYXh0aG9uLmNuL3RocmVhZC04Mzk4NzctMS0yLmh0bWwKLy8gQERvd25sb2FkVVJMCQlodHRwczovL29wZW51c2VyanMub3JnL2luc3RhbGwvSEtNSEQvJUU3JTk5JUJFJUU1JUJBJUE2JUU3JUJEJTkxJUU5JUExJUI1JUU2JTkwJTlDJUU3JUI0JUEyXyVFNiU4RSVBOCVFNSVCOSVCRiVFOCVCRiU4NyVFNiVCQiVBNC51c2VyLmpzCi8vIEB1cGRhdGVVUkwJCWh0dHBzOi8vb3BlbnVzZXJqcy5vcmcvaW5zdGFsbC9IS01IRC8lRTclOTklQkUlRTUlQkElQTYlRTclQkQlOTElRTklQTElQjUlRTYlOTAlOUMlRTclQjQlQTJfJUU2JThFJUE4JUU1JUI5JUJGJUU4JUJGJTg3JUU2JUJCJUE0LnVzZXIuanMKLy8gQGljb24JCQlodHRwOi8vd3d3LmJhaWR1LmNvbS9mYXZpY29uLmljbwovLyBAcnVuLWF0CQkJZG9jdW1lbnQtaWRsZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpewogICAgdmFyIG9Db250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnRfbGVmdCcpOwogICAgdmFyIG9Db250ZW50TGVuID0gb0NvbnRlbnQuY2hpbGRyZW4ubGVuZ3RoOwogICAgdmFyIG9Db250ZW50UGFyZW50ID0gb0NvbnRlbnQucGFyZW50Tm9kZTsKICAgIGlmIChvQ29udGVudExlbiAhPSAxMCAmJiBvQ29udGVudExlbiAhPSAyMCAmJiBvQ29udGVudExlbiAhPSA1MCAmJiBvQ29udGVudExlbiAhPSAxMDApIHsKICAgICAgICB2YXIgYWRsZW4gPSBvQ29udGVudC5jaGlsZHJlblswXS5jbGFzc05hbWUucmVwbGFjZSgvXiB8ICQvLCAnJykuc3BsaXQoJyAnKTsKICAgICAgICBmb3IgKGkgPSBvQ29udGVudExlbiAtIDE7IGkgPD0gb0NvbnRlbnRMZW4gLSAxICYmIGkgIT0gLTE7IGktLSkgewoJCQlhZENsYXNzTGVuID0gb0NvbnRlbnQuY2hpbGRyZW5baV0uY2xhc3NOYW1lLnJlcGxhY2UoL14gfCAkLywgJycpLnNwbGl0KCcgJykubGVuZ3RoOwogICAgICAgICAgICBpZiAoYWRDbGFzc0xlbiA9PSA0IHx8IGFkQ2xhc3NMZW4gPT0gNSB8fCAoYWRDbGFzc0xlbiA9PSAzICYmIG9Db250ZW50LmNoaWxkcmVuW2ldLmNsYXNzTmFtZS5zZWFyY2goJ3Jlc3VsdCcsJ2knKT09LTEpKSB7CiAgICAgICAgICAgICAgICBvQ29udGVudC5yZW1vdmVDaGlsZChvQ29udGVudC5jaGlsZHJlbltpXSk7CgkJCX0gZWxzZSBpZihvQ29udGVudC5jaGlsZHJlbltpXS50YWdOYW1lPT0nQlInKXsKICAgICAgICAgICAgICAgIG9Db250ZW50LnJlbW92ZUNoaWxkKG9Db250ZW50LmNoaWxkcmVuW2ldKTsKCQkJfQogICAgICAgIH0KCQkKICAgICAgICAvL29Db250ZW50LnJlbW92ZUNoaWxkKG9Db250ZW50LmZpcnN0RWxlbWVudENoaWxkKTsKICAgICAgICAvL29Db250ZW50LnJlbW92ZUNoaWxkKG9Db250ZW50Lmxhc3RFbGVtZW50Q2hpbGQpCiAgICB9Cn0pKCk7"},{"name":"百度盘直接下载","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1453714997499,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/13638-%E7%99%BE%E5%BA%A6%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD/code/%E7%99%BE%E5%BA%A6%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD.user.js","uuid":"526297f9-aafd-46dc-b892-b53d2588f2f2","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUg55m+5bqm55uY55u05o6l5LiL6L29Ci8vIEBuYW1lc3BhY2UgICAgcGFuLmJhaWR1LmNvbQovLyBAZGVzY3JpcHRpb24gIOWwseS7luWmiOS4jeijheeZvuW6puS6keeuoeWutgovLyBAdmVyc2lvbiAgICAgIDAuMC4xCi8vIEBtYXRjaCAgICAgICAgKjovL3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly95dW4uYmFpZHUuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKbmF2aWdhdG9yLl9fZGVmaW5lR2V0dGVyX18oInBsYXRmb3JtIiwgZnVuY3Rpb24oKXtyZXR1cm4gIkxpbnV4Ijt9KTs="},{"name":"锐捷文档库在全局雅黑下显示不正常修订","options":{"awareOfChrome":false,"comment":"","compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":true,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://doc.ruijie.com.cn/*"],"orig_noframes":null,"orig_run_at":"document-body","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":"document-body"},"storage":{"ts":1453769984681,"data":{}},"enabled":true,"position":8,"file_url":"doc.ruijie.com.cn","uuid":"72e36308-0e27-4c33-9a42-265f7c3e6963","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICDplJDmjbfmlofmoaPlupPlnKjlhajlsYDpm4Xpu5HkuIvmmL7npLrkuI3mraPluLjkv67orqIKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3VzZXJzLzQKLy8gQGRlc2NyaXB0aW9uICAgICBSZXN0b3JlIFN0eWxpc2ggc3R5bGVzIGZyb20gZGVsZXRpb24gb24gYmFpZHUuY29tCi8vIEB2ZXJzaW9uICAgICAgICAgMS4wCi8vIEBhdXRob3IgICAgICAgICAgbHVhbnR1QHZpcC5xcS5jb20KLy8gQG1hdGNoICAgICAgICAgICAqOi8vZG9jLnJ1aWppZS5jb20uY24vKgovLyBAcnVuLWF0ICAgICAgICAgIGRvY3VtZW50LWJvZHkKLy8gPT0vVXNlclNjcmlwdD09CgpmdW5jdGlvbiBmaXhTdHlsZSgpewogICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJoaWRkZW4tcGhvbmUiKTsKICAgIC8vYWxlcnQoZWxlbWVudFsxXS5pbm5lckhUTUwpOwogICAgZWxlbWVudFsxXS5pbm5lckhUTUw9IueCueWHu+aIkei3s+i9rOWIsOiuuuWdm+WQkOanve+8gSI7Cn0KZml4U3R5bGUoKTs="},{"name":"贴吧回复提醒","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*","https://*","ftp://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_connects":["tieba.baidu.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1453874100078,"data":{}},"enabled":false,"position":9,"file_url":"https://greasyfork.org/scripts/5009-%E8%B4%B4%E5%90%A7%E5%9B%9E%E5%A4%8D%E6%8F%90%E9%86%92/code/%E8%B4%B4%E5%90%A7%E5%9B%9E%E5%A4%8D%E6%8F%90%E9%86%92.user.js","uuid":"73ce230c-fbf1-4975-b06a-816827bc01c0","source":""},{"name":"研究院主页修正","options":{"awareOfChrome":false,"comment":"","compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.ruijie.net"],"orig_noframes":null,"orig_run_at":"document-body","use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":"document-end","user_agent":""},"storage":{"ts":1455866019136,"data":{}},"enabled":true,"position":10,"file_url":"www.ruijie.net","uuid":"621ebc44-16d7-4a1a-995e-d6987ac3d2eb","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICDnoJTnqbbpmaLkuLvpobXkv67mraMKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3VzZXJzLzQKLy8gQGRlc2NyaXB0aW9uICAgICBSZXN0b3JlIFN0eWxpc2ggc3R5bGVzIGZyb20gZGVsZXRpb24gb24gYmFpZHUuY29tCi8vIEB2ZXJzaW9uICAgICAgICAgMS4wCi8vIEBhdXRob3IgICAgICAgICAgbHVhbnR1QHZpcC5xcS5jb20KLy8gQG1hdGNoICAgICAgICAgICAqOi8vd3d3LnJ1aWppZS5uZXQKLy8gQHJ1bi1hdCAgICAgICAgICBkb2N1bWVudC1ib2R5Ci8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gZml4U3R5bGUoKXsKICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiTXNvTm9ybWFsVGFibGUiKTsKICAgIC8vYWxlcnQoZWxlbWVudFsxXS5pbm5lckhUTUwpOwogICAgLy9lbGVtZW50WzFdLmlubmVySFRNTD0i54K55Ye75oiR6Lez6L2s5Yiw6K665Z2b5ZCQ5qe977yBIjsKICAgIGVsZW1lbnRbMF0uc3R5bGUubWFyZ2luPScwIGF1dG8nOwogICAgZWxlbWVudFsxXS5zdHlsZS53aWR0aD0nMTAwJSc7Cn0KZml4U3R5bGUoKTs="},{"name":"资源统计系统","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://192.168.5.161:8080/resManage/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":"document-end"},"storage":{"ts":1460942055220,"data":{}},"enabled":true,"position":11,"file_url":"http://192.168.5.161:8080/resManage/","uuid":"efd4b186-a45a-4ecd-9912-067fb295b80b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDotYTmupDnu5/orqHns7vnu58KLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICAqOi8vMTkyLjE2OC41LjE2MTo4MDgwL3Jlc01hbmFnZS8qCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCmZ1bmN0aW9uIGZpeFN0eWxlKCl7CiAgICB2YXIgc3RyPWRvY3VtZW50LmJvZHkuaW5uZXJIVE1MOwogICAgc3RyPXN0ci5yZXBsYWNlKCLmgLvnu5Pmn6Xor6Io5bel5L2c6aG5KSIsIuaAu+e7k+afpeivoiIpOwp9CmZpeFN0eWxlKCk7"},{"name":"医护网修正","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.yihu.com/hospital/guahao/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":"document-end"},"storage":{"ts":1465809046711,"data":{}},"enabled":false,"position":12,"uuid":"23521ea0-acd0-4770-b0de-84ef8346ff79","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICDljLvmiqTnvZHkv67mraMKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3VzZXJzLzQKLy8gQGRlc2NyaXB0aW9uICAgICBSZXN0b3JlIFN0eWxpc2ggc3R5bGVzIGZyb20gZGVsZXRpb24gb24gYmFpZHUuY29tCi8vIEB2ZXJzaW9uICAgICAgICAgMS4wCi8vIEBhdXRob3IgICAgICAgICAgbHVhbnR1QHZpcC5xcS5jb20KLy8gQG1hdGNoICAgICAgICAgICAqOi8vd3d3LnlpaHUuY29tL2hvc3BpdGFsL2d1YWhhby8qCi8vIEBydW4tYXQgICAgICAgICAgZG9jdW1lbnQtZW5kCi8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gZml4U3R5bGUoKSB7Ci8vc2xlZXAoMTApOwphbGVydCgiZml4U3R5bGUiKTsKdmFyIGksYSxzPSIiOwp2YXIgZD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiZGl2Iik7CgogICAgZm9yKGk9MDtpPGQubGVuZ3RoO2krKykgewoKICAgICAgICBpZihkW2ldLmNsYXNzTmFtZT09ImNhcm91c2VsLWNsaXAtcmVnaW9uIikgewogICAgICAgICAgICBhbGVydChkW2ldLmNsYXNzTmFtZSk7CiAgICAgICAgfQogICAgfQp9CmZpeFN0eWxlKCk7"},{"name":"解决百度云大文件下载限制","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://pan.baidu.com/*","https://pan.baidu.com/*","http://yun.baidu.com/*","https://yun.baidu.com/*","https://eyun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1478144984938,"data":{}},"enabled":true,"position":13,"file_url":"https://greasyfork.org/scripts/17800-%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6/code/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6.user.js","uuid":"184b78f0-170d-495c-bc84-585b6169d465","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDop6PlhrPnmb7luqbkupHlpKfmlofku7bkuIvovb3pmZDliLYKLy8gQG5hbWVzcGFjZSAgICB1bmRlZmluZWQKLy8gQHZlcnNpb24gICAgICAwLjAuNgovLyBAZGVzY3JpcHRpb24gIOS4gOihjOS7o+egge+8jOino+WGs+eZvuW6puS6keWkp+aWh+S7tuS4i+i9vemZkOWItgovLyBAYXV0aG9yICAgICAgIGZ1bmlhbnd1eGluCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3l1bi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8veXVuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9leXVuLmJhaWR1LmNvbS8qCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQovKiBqc2hpbnQgLVcwOTcgKi8KJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdC5nZXRQcm90b3R5cGVPZihuYXZpZ2F0b3IpLCdwbGF0Zm9ybScse2dldDpmdW5jdGlvbigpe3JldHVybiAnc2JfYmFpZHUnO319KQoKCihmdW5jdGlvbigpewp2YXIgaHJlZj1sb2NhdGlvbi5ocmVmOwovaHR0cDovLnRlc3QoaHJlZik/bG9jYXRpb24uaHJlZj0naHR0cHMnK2hyZWYuc2xpY2UoNCk6MDsKfSgpKTsKCgogICAg"},{"name":"百度网盘直接下载（请看脚本说明）","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1478145003800,"data":{}},"enabled":true,"position":14,"file_url":"https://greasyfork.org/scripts/24103-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E6%94%B9/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%EF%BC%88%E6%94%B9%EF%BC%89.user.js","uuid":"1951a9a6-01a7-4fe8-b729-1f55c1eca3e0","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUg55m+5bqm572R55uY55u05o6l5LiL6L2977yI6K+355yL6ISa5pys6K+05piO77yJCi8vIEB2ZXJzaW9uICAgICAgMS4yCi8vIEBkZXNjcmlwdGlvbiDmnKzniYjpgILnlKjkuo7mnIDmlrDnmb7luqbnvZHnm5jvvIHliIbkuqvpobXpnaLkuZ/lj6/ku6XkuIvovb3lk6bvvIzlj43mraPmiJHlsLHmmK/kuI3nlKjluqblqJjkupHnrqHlrrbvvIEKLy8gQG1hdGNoICAgICAgICAqOi8vcGFuLmJhaWR1LmNvbS9kaXNrL2hvbWUqCi8vIEBtYXRjaCAgICAgICAgKjovL3l1bi5iYWlkdS5jb20vZGlzay9ob21lKgovLyBAbWF0Y2ggICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL3MvKgovLyBAbWF0Y2ggICAgICAgICo6Ly95dW4uYmFpZHUuY29tL3MvKgovLyBAbWF0Y2ggICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL3NoYXJlL2xpbmsqCi8vIEBtYXRjaCAgICAgICAgKjovL3l1bi5iYWlkdS5jb20vc2hhcmUvbGluayoKLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1zdGFydAovLyBAaW5jbHVkZSAgICAgICAgKjovL3Bhbi5iYWlkdS5jb20vZGlzay9ob21lKgovLyBAaW5jbHVkZSAgICAgICAgKjovL3l1bi5iYWlkdS5jb20vZGlzay9ob21lKgovLyBAaW5jbHVkZSAgICAgICAgKjovL3Bhbi5iYWlkdS5jb20vcy8qCi8vIEBpbmNsdWRlICAgICAgICAqOi8veXVuLmJhaWR1LmNvbS9zLyoKLy8gQGluY2x1ZGUgICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL3NoYXJlL2xpbmsqCi8vIEBpbmNsdWRlICAgICAgICAqOi8veXVuLmJhaWR1LmNvbS9zaGFyZS9saW5rKgovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LXN0YXJ0Ci8vIEBuYW1lc3BhY2UgaHR0cDovL2ppeHVuLm9yZy8KLy8gPT0vVXNlclNjcmlwdD09CgoKdHJ5IHsgdmFyIHc9dW5zYWZlV2luZG93OyB9IGNhdGNoIChlKSB7IHZhciB3PXdpbmRvdzsgfQp3Lm5hdmlnYXRvci5fX2RlZmluZUdldHRlcl9fICgncGxhdGZvcm0nLCBmdW5jdGlvbiAoKSB7cmV0dXJuICdDcmFja2VkIGJ5IEppeHVuIF5eJzt9KTsK"},{"name":"AntiAdware","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http*://*180upload.com/*","http*://*4upfiles.com/*","http*://*get*.adobe.com/*flashplayer/*","http*://*get*.adobe.com/*reader/*","http*://*afterdawn.com/software/*","http*://*akafile.com/akago.php","http*://*chip.de/downloads/*","http*://*clicknupload.com/*","http*://*cloudyvideos.com/*","http*://*coolrom.com/*/*","http*://*clipconverter.cc/download/*","http*://*dailyuploads.net/*","http*://*datafilehost.com/d/*","http*://*davvas.com/*","http*://*d-h.st/*","http*://*download.cnet.com/*","http*://*telecharger.cnet.com/*","http*://*descargar.cnet.com/*","http*://*de.download.cnet.com/*","http*://*filefactory.com/file/*","http*://*filescdn.com/*","http*://*filehippo.com/*download*","http*://*freewarefiles.com/downloads_counter.php*","http*://*google.*/earth/download/ge/agree.html","http*://*hugefiles.net/*","http*://*hulkload.com/*","http*://*kingfiles.net/*","http*://*letitbit.net/download/*","http*://*loveroms.com/*","http*://*up.media1fire.com/*","http*://*mightyupload.com/*","http*://*mp3fil.*/get/*","http*://*mp3juices.to/*","http*://*mp3olimp.net/*","http*://*mp3olimpz.com/*","http*://*opensubtitles.org/*/subtitles/*","http*://*revclouds.com/*","http*://*romhustler.net/download/*","http*://*romhustler.net/rom/*","http*://*secureupload.eu/*","http*://*sendspace.com/file/*","http*://*sharebeast.com/*","http*://*shared.com/*","http*://*softm8.com*","http*://*.softonic.*","http*://*sourceforge.net/*","http*://*tusfiles.net/*","http*://*unlimitzone.com/*","http*://*uploading.com/*","http*://*uplod.ws/*","http*://*uploads.to/*","http*://*uptobox.com/*","http*://*userscdn.com/*","http*://*ziddu.com/downloadfile/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1478252146788,"data":{}},"enabled":true,"position":15,"file_url":"https://greasyfork.org/scripts/4294-antiadware/code/AntiAdware.user.js","uuid":"036f94dd-5de8-4700-b438-067ecb7d531e","source":""},{"name":"Bypass Wait, Code & Login on Websites","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["down.lepan.cc","music.baidu.com","yinyueyun.baidu.com","media.store.kugou.com","trackercdn.kugou.com","yinyuetai.com","itwusun.com"],"orig_excludes":[],"orig_includes":["http://d.119g.com/*","http://123564.com/*","http://m.123564.com/*","http://www.5xfile.com/*","http://7958.com/*","http://*.7958.com/*","http://qjwm.com/*","http://*.qjwm.com/*","http://www.9pan.net/*","http://*.www.9pan.net/*","http://yun.baidu.com/*","http://*.yun.baidu.com/*","http://pan.baidu.com/*","http://*.pan.baidu.com/*","http://bx0635.com/*","http://*.bx0635.com/*","http://colayun.com/*","http://*.colayun.com/*","http://colafile.com/*","http://*.colafile.com/*","http://coladrive.com/*","http://*.coladrive.com/*","http://400gb.com/*","http://*.400gb.com/*","http://ctdisk.com/*","http://*.ctdisk.com/*","http://pipipan.com/*","http://*.pipipan.com/*","http://bego.cc/*","http://*.bego.cc/*","http://ctfile.com/*","http://*.ctfile.com/*","http://t00y.com/*","http://*.t00y.com/*","http://dlkoo.com/*","http://*.dlkoo.com/*","http://howfile.com/*","http://*.howfile.com/*","http://www.lepan.cc/*","http://www.sx566.com/*","http://rayfile.com/*","http://*.rayfile.com/*","http://sudupan.com/*","http://*.sudupan.com/*","http://vdisk.cn/*","http://*.vdisk.cn/*","http://yimuhe.com/*","http://*.yimuhe.com/*","http://douban.fm/*","http://jing.fm/*","http://moe.fm/*","http://fm.qq.com/*","http://music.163.com/*","http://www.1ting.com/*","http://www.565656.com/*","http://5sing.com/*","http://*.5sing.com/*","http://5sing.kugou.com/*","http://*.5sing.kugou.com/*","http://www.9ku.com/*","http://music.baidu.com/*","http://play.baidu.com/*","http://*.play.baidu.com/*","http://yinyueyun.baidu.com/*","http://www.djcc.com/*","http://www.djkk.com/*","http://www.djye.com/*","http://music.douban.com/*","http://www.duole.com/*","http://ear.duomi.com/*","http://web.kugou.com/*","http://kugou.com/*","http://www.kugou.com/*","http://oyinyue.com/*","http://*.oyinyue.com/*","http://y.qq.com/*","http://*.y.qq.com/*","http://i.y.qq.com/*","http://*.i.y.qq.com/*","http://fm.qq.com/*","http://*.fm.qq.com/*","http://y.qq.com/*","http://soso.music.qq.com/*","http://songtaste.com/*","http://*.songtaste.com/*","http://www.xiami.com/*","http://yinyuetai.com/*","http://*.yinyuetai.com/*","http://79pan.com/*","http://*.79pan.com/*","http://03xg.com/*","http://*.03xg.com/*","http://7mv.cc/*","http://*.7mv.cc/*","http://pan.52zz.org/*","http://*.pan.52zz.org/*","http://258pan.com/*","http://*.258pan.com/*","http://huimeiku.com/*","http://*.huimeiku.com/*","http://wpan.cc/*","http://*.wpan.cc/*","http://ypan.cc/*","http://*.ypan.cc/*","http://azpan.com/*","http://*.azpan.com/*","http://gxdisk.com/*","http://*.gxdisk.com/*","http://2kuai.com/*","http://*.2kuai.com/*","http://1wp.me/*","http://*.1wp.me/*","http://77pan.cc/*","http://*.77pan.cc/*","http://vvpan.com/*","http://*.vvpan.com/*","http://fmdisk.com/*","http://*.fmdisk.com/*","http://bx0635.com/*","http://*.bx0635.com/*","http://10pan.cc/*","http://*.10pan.cc/*","http://1pan.cc/*","http://*.1pan.cc/*","http://123wzwp.com/*","http://*.123wzwp.com/*","http://wwp5.com/*","http://*.wwp5.com/*","http://fydisk.com/*","http://*.fydisk.com/*","https://jixunmoe.github.io/cuwcl4c/config/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1478252146948,"data":{}},"enabled":true,"position":16,"file_url":"https://greasyfork.org/scripts/2600-%E8%B7%B3%E8%BF%87%E7%BD%91%E7%AB%99%E7%AD%89%E5%BE%85-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%8A%E7%99%BB%E5%BD%95/code/%E8%B7%B3%E8%BF%87%E7%BD%91%E7%AB%99%E7%AD%89%E5%BE%85%E3%80%81%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%8A%E7%99%BB%E5%BD%95.user.js","uuid":"1da69931-c48c-4a01-9695-da1fc94bcf5d","source":""}]}